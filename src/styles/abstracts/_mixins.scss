@import 'variables';

// Media queries mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'sm' {
    @media (min-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == 'md' {
    @media (min-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == 'lg' {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == 'xl' {
    @media (min-width: $breakpoint-xl) { @content; }
  }
}

// Flexbox mixins
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Typography mixins
@mixin heading-1 {
  font-family: 'Montserrat', sans-serif;
  font-weight: $font-weight-extrabold;
  font-size: $font-size-xxl;
  line-height: 1.2;
}

@mixin heading-2 {
  font-family: 'Montserrat', sans-serif;
  font-weight: $font-weight-bold;
  font-size: $font-size-xl;
  line-height: 1.3;
}

@mixin heading-3 {
  font-family: 'Montserrat', sans-serif;
  font-weight: $font-weight-bold;
  font-size: $font-size-lg;
  line-height: 1.4;
}

@mixin body-text {
  font-family: 'Poppins', sans-serif;
  font-weight: $font-weight-normal;
  font-size: $font-size-md;
  line-height: 1.5;
}

@mixin small-text {
  font-family: 'Poppins', sans-serif;
  font-weight: $font-weight-normal;
  font-size: $font-size-sm;
  line-height: 1.4;
}

// Button mixins
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: 'Poppins', sans-serif;
  font-weight: $font-weight-medium;
  border-radius: $border-radius-md;
  transition: all $transition-normal;
  border: none;
  cursor: pointer;
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-primary {
  @include button-base;
  background-color: $orange-primary;
  color: $white;
  
  &:hover:not(:disabled) {
    background-color: darken($orange-primary, 5%);
  }
  
  &:active:not(:disabled) {
    background-color: darken($orange-primary, 10%);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: $blue-primary;
  color: $white;
  
  &:hover:not(:disabled) {
    background-color: lighten($blue-primary, 5%);
  }
  
  &:active:not(:disabled) {
    background-color: lighten($blue-primary, 10%);
  }
}

@mixin button-tertiary {
  @include button-base;
  background-color: transparent;
  color: $orange-primary;
  border: 1px solid $orange-primary;
  
  &:hover:not(:disabled) {
    background-color: rgba($orange-primary, 0.1);
  }
  
  &:active:not(:disabled) {
    background-color: rgba($orange-primary, 0.2);
  }
}

// Card mixins
@mixin card-base {
  background-color: $white;
  border-radius: $border-radius-md;
  box-shadow: $shadow-sm;
  overflow: hidden;
  transition: box-shadow $transition-normal;
  
  &:hover {
    box-shadow: $shadow-md;
  }
}

// Animation mixins
@mixin fade-in {
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  animation: fadeIn $transition-normal;
}

@mixin slide-in($direction: 'up', $distance: 20px) {
  @if $direction == 'up' {
    @keyframes slideInUp {
      from { 
        opacity: 0;
        transform: translateY($distance); 
      }
      to { 
        opacity: 1;
        transform: translateY(0); 
      }
    }
    animation: slideInUp $transition-normal;
  } @else if $direction == 'down' {
    @keyframes slideInDown {
      from { 
        opacity: 0;
        transform: translateY(-$distance); 
      }
      to { 
        opacity: 1;
        transform: translateY(0); 
      }
    }
    animation: slideInDown $transition-normal;
  } @else if $direction == 'left' {
    @keyframes slideInLeft {
      from { 
        opacity: 0;
        transform: translateX($distance); 
      }
      to { 
        opacity: 1;
        transform: translateX(0); 
      }
    }
    animation: slideInLeft $transition-normal;
  } @else if $direction == 'right' {
    @keyframes slideInRight {
      from { 
        opacity: 0;
        transform: translateX(-$distance); 
      }
      to { 
        opacity: 1;
        transform: translateX(0); 
      }
    }
    animation: slideInRight $transition-normal;
  }
}